package parametres;

import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class ParametresVue extends javax.swing.JDialog {

    ParametresModele parametresModele;

    /**
     * Creates new form ParametresVue
     */
    public ParametresVue(java.awt.Frame parent, ParametresModele parametresModele) {
        super(parent, true);
        this.parametresModele = parametresModele;
        setResizable(false);


        initComponents();

        if ("EU".equals(parametresModele.getNorme())) {
            btnNormeEU.setSelected(true);
        } else {
            btnNormeUS.setSelected(true);
        }

        sliderFrequence.setValue(parametresModele.getFrequencePicots());
        checkboxSonActif.setSelected(parametresModele.getSon());
        vtplayer.setSelected(parametresModele.getVTPlayerMouse());

        tableControle.setValueAt(java.awt.event.KeyEvent.getKeyText(parametresModele.getKeySpatialization()), 0, 1);
        tableControle.setValueAt(java.awt.event.KeyEvent.getKeyText(parametresModele.getKeyRotation()), 1, 1);
        tableControle.setValueAt(java.awt.event.KeyEvent.getKeyText(parametresModele.getKeyChangeBit()), 2, 1);
        tableControle.setValueAt(java.awt.event.KeyEvent.getKeyText(parametresModele.getKeySuppresion()), 3, 1);
        tableControle.setValueAt(java.awt.event.KeyEvent.getKeyText(parametresModele.getKeyEchapement()), 4, 1);

        checkBoxRedim.setSelected(parametresModele.getAutoResize());

    }

    protected static int showKeyChooser(javax.swing.JDialog frame) {
        javax.swing.JDialog dialog = new javax.swing.JDialog(frame, true);
        dialog.setUndecorated(true);
        dialog.setResizable(false);
        dialog.setLocationRelativeTo(frame);

        javax.swing.JLabel jLabel = new javax.swing.JLabel("Appuyez sur la touche a associer a la commande");
        jLabel.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.BLACK));
        dialog.add(jLabel);

        KeyInput keyInput = new KeyInput();
        dialog.addKeyListener(keyInput);

        dialog.pack();
        dialog.setVisible(true);

        return keyInput.getKey();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.ButtonGroup btnGroup = new javax.swing.ButtonGroup();
        javax.swing.JLabel lblTitre = new javax.swing.JLabel();
        javax.swing.JPanel pnlNorme = new javax.swing.JPanel();
        javax.swing.JSeparator jSeparator1 = new javax.swing.JSeparator();
        javax.swing.JLabel lblTitreNorme = new javax.swing.JLabel();
        btnNormeEU = new javax.swing.JRadioButton();
        btnNormeUS = new javax.swing.JRadioButton();
        javax.swing.JPanel pnlSon = new javax.swing.JPanel();
        checkboxSonActif = new javax.swing.JCheckBox();
        javax.swing.JLabel lblTitreSon = new javax.swing.JLabel();
        javax.swing.JSeparator jSeparator4 = new javax.swing.JSeparator();
        javax.swing.JPanel pnlFrequence = new javax.swing.JPanel();
        javax.swing.JSeparator jSeparator3 = new javax.swing.JSeparator();
        sliderFrequence = new javax.swing.JSlider();
        javax.swing.JLabel lblTitreFrequence = new javax.swing.JLabel();
        lblValFrequence = new javax.swing.JLabel();
        javax.swing.JPanel pnlControle = new javax.swing.JPanel();
        javax.swing.JLabel lblControles = new javax.swing.JLabel();
        javax.swing.JSeparator jSeparator2 = new javax.swing.JSeparator();
        tableControle = new javax.swing.JTable();
        Annuler = new javax.swing.JButton();
        Appliquer = new javax.swing.JButton();
        Ok = new javax.swing.JButton();
        javax.swing.JPanel pnlVTPlayer = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JSeparator jSeparator5 = new javax.swing.JSeparator();
        vtplayer = new javax.swing.JCheckBox();
        pnlRedim = new javax.swing.JPanel();
        javax.swing.JLabel lblRedim = new javax.swing.JLabel();
        javax.swing.JSeparator jSeparator6 = new javax.swing.JSeparator();
        checkBoxRedim = new javax.swing.JCheckBox();

        btnGroup.add(btnNormeEU);
        btnGroup.add(btnNormeUS);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitre.setText("Parametres");

        lblTitreNorme.setText("Norme");

        btnNormeEU.setText("EU");
        btnNormeEU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNormeEUActionPerformed(evt);
            }
        });

        btnNormeUS.setText("US");
        btnNormeUS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNormeUSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNormeLayout = new javax.swing.GroupLayout(pnlNorme);
        pnlNorme.setLayout(pnlNormeLayout);
        pnlNormeLayout.setHorizontalGroup(
            pnlNormeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNormeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNormeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNormeUS)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitreNorme)
                    .addComponent(btnNormeEU))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlNormeLayout.setVerticalGroup(
            pnlNormeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNormeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitreNorme)
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNormeEU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNormeUS)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        checkboxSonActif.setText("Activé");
        checkboxSonActif.setToolTipText("Option dictant le nom des composants pointés");
        checkboxSonActif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxSonActifActionPerformed(evt);
            }
        });

        lblTitreSon.setText("Son");

        javax.swing.GroupLayout pnlSonLayout = new javax.swing.GroupLayout(pnlSon);
        pnlSon.setLayout(pnlSonLayout);
        pnlSonLayout.setHorizontalGroup(
            pnlSonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitreSon)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkboxSonActif))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSonLayout.setVerticalGroup(
            pnlSonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitreSon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkboxSonActif)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sliderFrequence.setMaximum(2000);
        sliderFrequence.setMinimum(100);
        sliderFrequence.setToolTipText("Fréquence d'élévation des picots");
        sliderFrequence.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderFrequenceStateChanged(evt);
            }
        });

        lblTitreFrequence.setText("Frequence ");

        javax.swing.GroupLayout pnlFrequenceLayout = new javax.swing.GroupLayout(pnlFrequence);
        pnlFrequence.setLayout(pnlFrequenceLayout);
        pnlFrequenceLayout.setHorizontalGroup(
            pnlFrequenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFrequenceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFrequenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTitreFrequence)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(sliderFrequence, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
            .addGroup(pnlFrequenceLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(lblValFrequence, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlFrequenceLayout.setVerticalGroup(
            pnlFrequenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFrequenceLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitreFrequence)
                .addGap(7, 7, 7)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sliderFrequence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblValFrequence, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lblControles.setText("Controles");

        tableControle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Spatialisation", null},
                {"Rotation", null},
                {"Changer etat fil", null},
                {"Suppression (Mode éditeur)", null},
                {"Echap (Mode éditeur)", null}
            },
            new String [] {
                "Commande", "Touche"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableControle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableControleMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlControleLayout = new javax.swing.GroupLayout(pnlControle);
        pnlControle.setLayout(pnlControleLayout);
        pnlControleLayout.setHorizontalGroup(
            pnlControleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlControleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblControles)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(162, Short.MAX_VALUE))
            .addGroup(pnlControleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlControleLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(tableControle, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        pnlControleLayout.setVerticalGroup(
            pnlControleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlControleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblControles)
                .addGap(5, 5, 5)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(144, Short.MAX_VALUE))
            .addGroup(pnlControleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlControleLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(tableControle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        Annuler.setText("Annuler");
        Annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnulerActionPerformed(evt);
            }
        });

        Appliquer.setText("Appliquer");
        Appliquer.setToolTipText("");
        Appliquer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AppliquerActionPerformed(evt);
            }
        });

        Ok.setText("Ok");
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });

        jLabel1.setText("VTPlayer");

        vtplayer.setText("Activé");
        vtplayer.setToolTipText("Activer si vous possèdez la souris VTPlayer");
        vtplayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vtplayerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlVTPlayerLayout = new javax.swing.GroupLayout(pnlVTPlayer);
        pnlVTPlayer.setLayout(pnlVTPlayerLayout);
        pnlVTPlayerLayout.setHorizontalGroup(
            pnlVTPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVTPlayerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlVTPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vtplayer)
                    .addComponent(jLabel1)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlVTPlayerLayout.setVerticalGroup(
            pnlVTPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVTPlayerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vtplayer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblRedim.setText("Redimensionnement de la fenêtre");

        checkBoxRedim.setText("Activé");
        checkBoxRedim.setToolTipText("Affiche une fenêtre sans scrollbar");
        checkBoxRedim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxRedimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRedimLayout = new javax.swing.GroupLayout(pnlRedim);
        pnlRedim.setLayout(pnlRedimLayout);
        pnlRedimLayout.setHorizontalGroup(
            pnlRedimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRedimLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRedimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRedim)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxRedim))
                .addContainerGap())
        );
        pnlRedimLayout.setVerticalGroup(
            pnlRedimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRedimLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRedim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxRedim)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitre)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlFrequence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Ok)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Annuler)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Appliquer))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pnlNorme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(pnlVTPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pnlSon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pnlRedim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pnlControle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlNorme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlSon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlControle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlVTPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlFrequence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Ok)
                                    .addComponent(Annuler)
                                    .addComponent(Appliquer)))))
                    .addComponent(pnlRedim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNormeEUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNormeEUActionPerformed
        needRestart();
        parametresModele.setNorme("EU");
    }//GEN-LAST:event_btnNormeEUActionPerformed

    private void btnNormeUSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNormeUSActionPerformed
        needRestart();
        parametresModele.setNorme("US");
    }//GEN-LAST:event_btnNormeUSActionPerformed

    private void checkboxSonActifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxSonActifActionPerformed
        parametresModele.setSon(String.valueOf(checkboxSonActif.isSelected()));
    }//GEN-LAST:event_checkboxSonActifActionPerformed

    private void sliderFrequenceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderFrequenceStateChanged
        String text = Integer.toString(sliderFrequence.getValue());
        parametresModele.setFreqPicots(text);
        lblValFrequence.setText(text);
    }//GEN-LAST:event_sliderFrequenceStateChanged

    private void AnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnulerActionPerformed
        try {
            // On recharges les anciens paramètre
            parametresModele.setProprietes(ParametresModele.load(parametresModele.getPathConfig()));
        } catch (java.io.IOException ex) {
        }
        dispose();
    }//GEN-LAST:event_AnnulerActionPerformed

    private void AppliquerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AppliquerActionPerformed
        try {
            parametresModele.sauvegarder();
        } catch (java.io.IOException ex) {
            // TODO informer l'utilisateur qu'il y a eu une erreur
            //System.out.println("Erreur lors de la sauvegarde des paramètres");
            java.util.logging.Logger.getLogger(ParametresVue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AppliquerActionPerformed

    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed
        AppliquerActionPerformed(evt);
        dispose();
    }//GEN-LAST:event_OkActionPerformed

    private void vtplayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vtplayerActionPerformed
        // TODO add your handling code here:
        parametresModele.setVTPlayerMouse(String.valueOf(vtplayer.isSelected()));
    }//GEN-LAST:event_vtplayerActionPerformed

    private void tableControleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableControleMouseClicked
        int key = showKeyChooser(this);
        String touche = java.awt.event.KeyEvent.getKeyText(key);
        int rowSelect = tableControle.getSelectedRow();


        for (int i = 0; i < 5; i++) {
            if (i != rowSelect && touche.equals(tableControle.getValueAt(i, 1))) {
                //System.out.println("NOOOON");
                JOptionPane.showMessageDialog(this, "Touche déja utilisée pour une autre commande", "Veuillez choisir une autre touche", JOptionPane.INFORMATION_MESSAGE);
                tableControleMouseClicked(evt);
                return;
            }
        }

        tableControle.setValueAt(touche, rowSelect, 1);


        switch (rowSelect) {
            case 0:
                parametresModele.setKeySpatialization(String.valueOf(key));
                break;
            case 1:
                parametresModele.setKeyRot(String.valueOf(key));
                break;
            case 2:
                parametresModele.setKeyChangeBit(String.valueOf(key));
                break;
            case 3:
                parametresModele.setKeySuppr(String.valueOf(key));
                break;
            case 4:
                parametresModele.setKeyEchapement(String.valueOf(key));
                break;
        }
    }//GEN-LAST:event_tableControleMouseClicked

    private void checkBoxRedimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxRedimActionPerformed
        needRestart();
        parametresModele.setAutoResize(String.valueOf(checkBoxRedim.isSelected()));
    }//GEN-LAST:event_checkBoxRedimActionPerformed

    private void needRestart() {
        if (restart) {
            JOptionPane.showMessageDialog(this, "Le changement de cette option nécessite le redémarrage du programme", "Attention !", JOptionPane.INFORMATION_MESSAGE);
            restart = false;
        }

    }
    private boolean restart = true;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Annuler;
    private javax.swing.JButton Appliquer;
    private javax.swing.JButton Ok;
    private javax.swing.JRadioButton btnNormeEU;
    private javax.swing.JRadioButton btnNormeUS;
    private javax.swing.JCheckBox checkBoxRedim;
    private javax.swing.JCheckBox checkboxSonActif;
    private javax.swing.JLabel lblValFrequence;
    private javax.swing.JPanel pnlRedim;
    private javax.swing.JSlider sliderFrequence;
    private javax.swing.JTable tableControle;
    private javax.swing.JCheckBox vtplayer;
    // End of variables declaration//GEN-END:variables
}
